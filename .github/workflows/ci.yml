name: FinSmart Fullstack CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Backend Dependencies
        run: npm ci

      - name: Run Backend Tests
        run: npm test

      - name: Run Backend Security Audit
        run: npm audit --audit-level=high

      - name: Trigger Render Backend Deploy
        if: success()
        run: |
          echo "Triggering Render deployment..."
          curl -X GET "${{ secrets.RENDER_DEPLOY_HOOK }}"


  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        run: npm ci

      - name: Run Frontend Lint
        run: npm run lint

      - name: Run Frontend Tests
        run: npm test


  docker-ml:
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build ML Docker Image
        run: |
          echo "Building Docker image for ML..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/finsmart-ml:latest .
        working-directory: ./ML

      - name: Push ML Docker Image
        run: |
          echo "Pushing Docker image to Docker Hub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/finsmart-ml:latest
